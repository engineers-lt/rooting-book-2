= 官公庁DevOpsへの道

== はじめに
こんにちは、@<tt>{@Rindrics}と申します。
私は、某国立研究開発法人で働く海洋生物研究者です。
本来の仕事は研究業務ですが、胸の内では自らをDevOps伝道師と定義し、組織をより良くするために奮闘しています。

ここに寄稿を決めたのは、「エンジニアの登壇を応援する会」の活動に貢献したいという思いからでした。
数年前――まだ自身の活動を定義できていなかった時代――私は『成長する本』と出会いました。
向上心を持っていきいきとした人生をおくる人たちがコミュニティを形成していることを知り、宝物を見つけたような気持ちになったことを覚えています。
『応援する本2』の出版計画を聞き、今度は私がコミュニティの一員として、「応援する」活動に貢献するときと思いました。

この章の目的は、組織の改善に取り組まれている方に勇気を与えることです。
組織を変えるための活動には、たくさんのエネルギーが必要です。
無力感を感じ、くじけそうになることもあります。
もしあなたがそのような境遇にあるなら、
官公庁というダイナソーで戦っている私の事例を知り、
また「なにかやろうとしている人の背中を押す」やさしいコミュニティがあることを知ってください。
大きなビジョンを胸に戦っているのはあなただけありません。

本章では、私の取り組みの過程を次の3つに分けて説明します:

 * うまくいかなかった時期（@<hd>{before}）

 * 転換期（@<hd>{breakthrough}）

 * 芽が出始めた現在（@<hd>{now}）

私の取り組みがはじめうまくいかなかった理由は、私自身が問題を正しく捉えられていなかったことにあります。
組織づくりという視点を持たなかったころの私は、表面的な問題に目を奪われたきり、プロジェクトの渦に吸い込まれていったのです。

=={before} 幕開け前

=== シーズンイン

6月、長崎。
今年もプロジェクトのシーズンがやってきました。
私はここ数日、1年前に自分で書いたR言語のスクリプトを恐る恐る実行していました。

「・・・ほっ、動いた・・・」

全部で十数種あるスパゲッティスクリプトがとりあえず動くことを確認したら、
つぎは吐き出されたcsvファイルを一つ一つ、目的のExcelファイルに貼っていきます。
目にも色鮮やかなこのExcelファイルさえ更新していれば、プロジェクトで文句は言われないはずです。
大学院のときから、全ての作業をR言語でやっていた「スマートな」私にとって、ネ申Excelを一つずつ手作業で整形していくなど、罰ゲームにしか思えなかったのです。
ひとまず、仕上がったExcelファイルの計算チェックを依頼し、先に進みます。

「次は何だったかな」

手順が書いてあるWordファイルを開きます。
私たちの事業はどれも年次プロジェクト。
どの仕事をするときも常に1年ぶりなのです。
手順書によれば、こんどは別のネ申Excelたちを、これまた別の集計ファイルにまとめる仕事のようです。
この仕事のために去年作ったスクリプトたちを開き、一つずつ実行していきます。

「あ、動かない」

どうやらデバッグが必要なようですが、今日は一日、このプロジェクトにかかりっきりです。
私は日課の勉強を済ませてから帰ることにしました。

=== 滝下りをはじめよう

スパゲッティのどこに問題があるかは、だいたい検討がつきました。
他人には散らかっているように見えても、本人にとっては整理されているものです。

「なるほど全角数字か...ったく勘弁してくれよ...」

ウルトラハードコードで修正――スパゲッティのお化けは、また少し大きくなったようです。
なんとか二つ目の集計Excelも仕上げ、これもチェックに出しました。

「作業を思い出しがてら、先に進めておこうかな」

まだまだウォーターフォールの先は長いので、気が急きます。
昨日依頼したExcelのチェック結果が返ってくるには、まだ数日かかるでしょう。
待つべきですが、頭が次の作業に慣れる時間も必要です。
それに、提出したExcelにミスがなければ、今日からのリードがそのまま生きてくるという期待もありました。

作業をすすめるため、「いつものあの作業」をします。
去年のプロジェクトフォルダからExcelファイルをコピーし、末尾の日付を今日のものに変えるのです。
秘伝のタレは決して切らしてはいけません: 明日はまたこれをコピーして、明日の日付に変えるのです。
このバックアップ作業はもはや呼吸のようなもので、目をつぶっていてもできます。

私はウォーターフォール下りを始めました。
ネ申Excelを集計した結果を、最後のExcelファイルへとペーストしていく作業です。
シートは十数種類あるので見切れていますが、色付けされているのですぐに見つけられます。
ペースト先のセルも親切に色付けされているので、迷う必要はありません。
計算結果をここへ貼れば、黄色い「集計」シートの値が変わるしくみです。
忘れてはいけないのが、数式の参照範囲の更新。
これを怠ると、結果が大きく変わってしまいます。
私は頼りないマウス操作で、該当する箇所を全て更新しました。
これで、今年の数値は大丈夫。
心になにか引っかかるものがある気がしましたが、
ひとまずウォーターフォールを一つ下り、私は身のない達成感を感じていました。

===[column] 私たちのプロジェクトが抱える問題
ウォーターフォールひとりモグラ叩き――手作業によるネ申エクセルの整形、Wordへの手貼り、そして目grepによるチェック。
ミスは即ふりだし行きです。
製品の品質は低く、しかも不安定です。
プロジェクトメンバーはみな、目先の作業に奔走していました。
なんとか当たり前品質を昨年の水準にまで回復させ、疲弊した状態で魅力的品質の向上に着手。
みんな頑張っていましたが、今年の魅力的品質は来年の当たり前品質。
毎年、来年の自分の首を締めているような格好でした。

残念ですが、現在公開されている資料にもどこかにミスはあるでしょう。

===[/column]

=== 手戻り地獄

「@<tt>{@Rindrics}さん、すいません...」

Excelファイルのチェックをしてくれた方の顔をみた瞬間、何が起きたかはすぐにわかりました。
ウォーターフォール上流でのミス発覚。
たった今まですすめていた作業は、全て無駄だったのです。

原因は、スクリプトのバグでした。
ひとまずミスを見つけてくれたことに感謝を述べ、修正にかかりました。
この先のウォーターフォールの長さを考えると、あまり悠長に修正している時間はありません。
ハードコードを重ね、吐き出されたcsvを再び集計Excelに貼りました。

Wordを使った執筆セクションに入ってからも、手戻りはなくなりません。
なにせ文中の数値はExcelからのコピペなのです。
いまは2018年――就職してから3年目に入っていましたが、この作業への耐性はつきそうにありませんでした。

=== 青二才からの提案

プロジェクトがひと段落したある日、私は所属課のメンバーに時間をもらって、業務体系の改善案をプレゼンしました。
内容は、TeXを用いたドキュメント生成の紹介です。
プレゼンでは、毎年繰り返される手作業ウォーターフォールを賽の河原での石積みに例えました。
解脱のカギがTeXというわけです。
終盤では、「ぼくのかんがえたさいきょうのスクリプト」が実際に動いている様子と、実際に生成されたドキュメントも見せました。

「きれいな成果物を、迅速に！！」
ポジティブな言葉でプレゼンをしめくくり、私は、プロジェクトが来年から良い方向に進んでいくだろうと安堵していました。

あれから3年。
未だにドキュメントは手作業で作られています。

===[column] 私の問題点

「スクリプトによるニセの自動化」、「@<tt>{TeX}導入の提案」...
私の取り組みは、全く効果がありませんでした。
そもそも私自身に問題があったからです。

==== 文化の大切さに気づいていなかった

私がカイゼンのつもりでやっていた取り組みはどれも、近視眼的な自動化に過ぎませんでした。
手作業をスクリプトに置き換えただけで、いわば自動モグラ叩きを作ろうとしているに過ぎませんでした。
ほんとうは、モグラ叩きの生産から止めないといけなかったのです。

私が文化的側面の重要性に気づいていなかったのは、ユーザー文化にどっぷりと浸かり、その外側が見えていなかったためです。
私とプログラミングとの出会いはR言語がきっかけでしたが、コミュニティイベントに参加することもせず、わからない点は全てweb検索で片付けてしまっていました。
技術的知識の吸収には興味があったのですが、その動機も、今振り返れば「個人技の強化」に過ぎません。
当時乱読した本の中にはDevOpsを扱ったものもあったのですが、個人技に心をうばわれた私には全く刺さっていませんでした。
残念なことに、当時の私には、仕事に不可欠な「ひとつの製品を仲間と協力して作りあげる」という視点は微塵もありませんでした。

===[/column]



=={breakthrough} ゼロからイチは大きな一歩

事態が突然動き出したのは、2018年の秋。
一つめの要因は、開発者的な視点を手に入れたことでした。

=== 越境

「注文は僕がしてくるから、いつもの席とっといてよ」

いつからか、私と妻は、土曜日の午後を市内のカフェで過ごすようになっていました。
向かい合わせに座ったら、あとは読書するもよし、考えごとをするもよし。
コーヒー片手にくつろぐ、週に一度の至福のひとときでした。
私にとっては、積ん読本を減らすいい機会にもなっていました。

私に越境のきっかけをくれたのは、Hadley Wickhamの『Rパッケージ開発』。
これも、積ん読本のなかから何気なく選んだ一冊でした。

「...テスト？...ビルド？これ、Rの本だったよな？」

Rを使いはじめてから既に6年目に入っていたのですが、この本で解説されているRは、私が知っているRとはまるで別物でした。
自分が6年もの間、コンフォートゾーンの中で漫然と過ごしていたことを自覚した私は、
次週からはラップトップを持ち込み、手を動かしながら読むことにしました。

開発者たちの働き方が自分の常識と根本的に違うことに気づいたのは、自動テストを知ったときでした。
なかでも回帰テストの威力は、私を謙虚にしてくれました。

「（...ッターン！）...あれ？」

自信たっぷりのコミットが、過去の自分が書いたプログラムを壊す瞬間を初めて目の当たりにしたとき、
自分はこれまで、いったいいくつの仕事を破壊してきたのだろうかと思いました。
仕事を期待通りに積み上げていく――テストという概念は私たち研究者の働き方を根本から変えるものと確信しました。

継続的インテグレーションを知ったときは、開発者たちの怠惰さに心底あきれたのを覚えています。
しかし胸に手を当てて考えると、
テストすること自体を忘れたり、ローカルファイルのコミットを忘れてしまう愚かな私こそが導入すべき手法であると自覚しました。

キーボードを叩く姿は似ていても、
コードを書く開発者とスクリプトを書くユーザーの働き方が全く違うことを知って、
私の仕事観は大きく変わりました。
その後いくつかパッケージを書いてゆくうち、自分の中でソフトウェアという言葉の響きが変わってくるのを感じました。
研究業務、いや全ての知識労働を含む言葉だったことに気づいたのです。
開発者という手本を見つけた秋でした。

=== 三本の矢

二つ目の転機は、転勤によって、思いがけず仲間を得たことでした。
まもなく年度も終わろうという2月、横浜への転勤が言い渡され、慌ただしく引っ越し。
同僚が二人増えることを知ったのは、横浜に着任してからでした。
聞けば二人とも、私と同い年だといいます。
同年代の若手が一気に3人も着任するだけでも異例なことですが、
私がもっと驚いたのは、彼らの担当課題の漠然さです;
彼らは業務改善のために採用されたのでした。

雲を掴むような任務が与えられた彼ら。
具体的なテーマを自分たちで決める必要があったため、部屋のメンバーへの聞き取り調査から始めたようでした。
インタビューは私にも回ってきました。

「我々の事業の弱点について、思い当たる点があれば教えていただけませんか？」

「まず、データベースがないことですね」

伊達にウォーターフォールモグラ叩きをやっていたわけではありません。
超絶テクニックに支えられた現状の業務フローを落書きで示しながら、私は説明しました。

話題は自然と仕事に対する価値観に移り、私たちはすっかり意気投合しました。
翌日にはもう、社内向けデータベースを開発するアジャイルチームができていました。

=== 座標の把握

まったく想定していなかったことですが、横浜への転勤には、もうひとつ思わぬ収穫がありました。
@<tt>{engineers-lt}への参加によって組織外と繋がり、自らの座標をより客観的に把握できたことです。

このコミュニティを知ったのは、2019年に開催された技術書典6。
横浜への転勤のおかげで図らずも参加できたのでした。
人でごった返す会場で、たまたま手にとった『応援する本』。
ざっとながめただけでもポジティブなメッセージに満ち溢れていたので、
続きは自宅で楽しむことにしました。
まだ読み終えないうちから、私は自身の価値観がコミュニティのビジョン
――支え合い、ともに成長してゆく場づくりを目指す――と共鳴し始めているのに気づきました。
ポジティブなエネルギーをわけてもらいたくて、Slackワークスペースに参加しました。

アウトプットの機会はすぐに巡ってきました。
夏真っ盛りのある日、イベント案内が届いたのです。
『残暑に負けるな！自由研究LT大会』――
登壇経験の少ないメンバー向けのイベントでした。
半ば勢いで、発表を申し込みました。

さて申し込んだは良いものの、ただの研究者の私が、エンジニアコミュニティで発信できるような技術ネタなんてありません。
しかしそこは発想の転換です: ウォーターフォール自慢をすることにしました。
我が組織のウォーターフォールのすごさ（？）に感銘を受けたのでしょう、当日、私のLTを聴く会場からは、生唾を飲む音が何度も聞こえました。
DevOpsを手本に改善してゆくことを宣言し、私はLTを締めくくりました。

あとになって自覚したことですが、このとき私はまだDevOpsが含む概念を捉えきれておらず、
この言葉を「とてもスマートなやり方」程度の意味で軽々しく口にしてしまっていました。
しかしエンジニアの方々に共感や励ましのお言葉をいただき、初めて自身の活動を、あながち無意味なものではないと肯定的に捉えることができました。
とにかくこのときの発表が、自身の活動を、組織外と関連付けてとらえた初めての機会でした。

=== そして何がおきたか

「開発者文化との出会い」
「チーム結成」そして「自らの座標の把握」。
ほぼ同時に起こったこれら三つの変化は、私の活動に息を吹き込んでくれました。
部内での勉強会開催と実務における実践、そして部活動の立ち上げです。

アウトプットとは、考えること。
考える過程では、ときに自身のアイデアを「発見」することもあります。
勉強会を主催するにあたり、アウトラインは大まかに決めていたつもりでしたが、
内容の吟味を繰り返すうちに、組織レベルの課題が徐々に見えてきました。
ブレインストーミング後の資料には、「助け合い」「文化醸成」「組織づくり」といったキーワードが並んでいました。
個人技にしか興味がなかったにおよそ1年前までは、まったく見向きもしなかった言葉たちです。
開発者たちがこれらをひっくるめてDevOpsと呼んでいることを知ったとき、私は自分の考察が車輪の再発明だったことに気づいたのですが、
ある意味自力でDevOpsにたどり着いたことは、学びの経験として残りました。
勉強会は全3回。初回は話を組織論にまで広げすぎて大コケでしたが、
第2回からはスコープを論文執筆にまで絞り、なんとかやり遂げました。
初回に30人ほどだった参加者は、最終的に6人にまで減ってしまいましたが、最後まで参加してくださったメンバーからはよいフィードバックももらえました。

同期三人でのデータベース開発プロジェクトも、失敗あり、成功あり。
彼らとの仕事を通じ、チームワークには、押さえるべきキモがあることを学びました。
誰もチーム開発の経験がなかったため、はじめはほとんど手探り状態。
始まって3ヶ月ほどで、仕様を大きく変更することになりました。
もし我々がスタートアップ企業だったら、とっくに倒産していたでしょう。
いま振り返ると、ユーザー定義とプロトタイピングを入念に行うべきだったと反省しています。
チームとしての成長が始まったきっかけは、スクラム開発の導入です。
論点のブレが激減し、品質と作り方それぞれをストイックに見直し、ユーザーの求めるものを効果的につくってゆけるようになりました。

一人で運営した勉強会での苦労と、チームプレーへの目覚めから、私は、DevOps推進活動を、コミュニティとしてすすめていく必要性を感じるようになりました。
三人という数字は、集団の最小単位です。
DevOpsという、我が組織のメンバーにとって得体の知れない概念を説く時、一人で活動したのでは、周囲には持論を振りかざすただの奇人に映るでしょう。
もう一人増えても、せいぜい変わり者の仲良し二人組かもしれません。
ところが三人になれば、信念を共有して行動する集団となります。
そもそもDevOps自体が、組織のDNAに組み込まれて力を発揮するもの。
これを推進する活動も絶対的リーダーが主導するのではなく、自律したコミュニティによってなされるべきです。
私たちDevOps部――まだ三人しかいませんが――は、組織を輝かせるための草の根活動を計画中です。

===[column] 私プロジェクトのいま

この7月に私はふたたび異動し、プロジェクトを俯瞰的にサポートする部署で働くことになりました。
DevOpsエンジニア的な働きを期待されての任命です。
着任してすぐの会議では、GitHubをベースとした業務フローに移行するために、プロジェクトメンバーに協力を呼びかけました。
所長はじめ管理職を含む全員が出席する場で、形式知の力がいかに重要かをプレゼンできたことは、プロジェクト改善にむけたの大きな一歩となるでしょう。

来年度から、GitHub Enterpriseの導入も決まりました。
費用を事業予算から拠出することの妥当性を予算元省庁に文書で説明しなければなりませんでしたが、すべてはプロジェクトの価値創造力を高めるためであるという熱いメッセージを込めました。
私の文案が最後にどれほど使われたかはわかりませんが、ポジティブな想像をするのは私の勝手です。

少しずつではありますが、私のプロジェクトはよい方向に変わってきています。
これは私たちDevOps部が、継続的デリバリーなどを通して、プロジェクトを陰ながら支えてきたことと無関係ではないと考えています。

===[/column]

=={now} 達成に向かって

=== 達成基準

私の活動の達成基準は、自身が参加するプロジェクトについて、以下の3点が満たされていることです。

 * 製品がビルドされていること
 * ビジネス知識がテストになっていること
 * 各メンバーが製品に誇りを持ち、自己肯定感を持って働けていること

勉強会の失敗から学び、
達成記述のスコープは組織ではなく、プロジェクトに限りました。
しかしそれでも、まだまだ必要なことがあります。

=== 私たちに必要なこと

==== 開発者の自覚

私たちの仕事の多くは、物質的な製品を作ることではありません。
つまり、私たちの仕事は広義のソフトウェア開発なのですが、
このような視点はあまり浸透していません。
まずは、学術研究とソフトウェア開発との関連性を示すことが必要と考えています。
それは、私たちの仕事のヒントが開発者の世界にたくさん転がっているにも関わらず、
使われている用語があまりにも違うため、我々のコミュニティからはまったく自分ごととして認識されていないためです。
私たちは、開発者の自覚を持つために、まずこの言葉の定義を改める必要があるかもしれません。
開発者とは、プログラムを書く人たちだけを指す言葉ではありません。成果物の質、そしてそれを生み出す過程を常に改善していく集団のことです。
あるいは、継続的に考え、学び続ける生き方を選択した人たちのことかもしれません。

==== 顧客目線での製品開発

私たちのプロジェクトは、商品を販売して対価を受け取る業態ではありませんが、
「製品」「顧客」という言葉をより広い意味で捉えておくことが必要です。
私たちの製品とは、報告書や統計データのこと、顧客とは、全国民および予算元省庁のことです。

仕事を製品として捉えるようになると、必然的に顧客の存在を意識するようになります。
顧客を明確に定義し、彼らが必要としているものを、また期待を上回るものを作る姿勢は、プロジェクトメンバーの方向性を統一する大きな助けとなります。
これは、物理法則からも明らかです: 仕事のベクトルの不統一は摩擦を引き起こし、エネルギーは熱として散逸してしまうからです。
メンバーの目的が顧客満足に正しく向いていれば、部門の壁は薄くなり、顧客満足を満たす仲間になるでしょう。

==== 暗黙知の徹底排除

私たちには、プレーンテキスト文化が必要です。
私たちのプロジェクトは、各メンバーが自身の担当業務のエキスパートに育っていくことで成り立っています。
そればかりか、プロジェクトへの貢献度が異常に高いスーパーマンのようなメンバーもごく少数います。
私たちのプロジェクトは、暗黙知やスーパーマンによって回っている、不確かなものなのです。
私は、他の官公庁、ひいては日本という国自体が、似たような不確かなしくみで回っているのではないかと想像しています。
ビジネス知識を関数として、ビジネス要求をテストとして蓄積して初めて、
私たちは、自分たちが何をしているかを見ることができるようになります。

私たちの仕事の多くは年次プロジェクトなので、基本的にメガリリース文化に支配されています。
ひとりモグラ叩きとメガリリース文化の融合は極めて危険です。
インクリメンタルな開発スタイルに慣れ、
要求を正確に把握できているかをこまめに確認しながら働く必要があります。

==== 集団で成長する

知識労働者には、継続的な学びの文化が不可欠です。
顧客満足を効果的に実現するためには、年齢や職歴にとらわれず、プロジェクトメンバーが共に学び、成長してゆく必要があります。
ウォーターフォールプロジェクトの乱立を食い止めるには、管理職にも開発者的な感覚が必要ですし、
プロジェクトの生産性向上には、現場のメンバーも管理職や経営者の視点を持つことが必要です。

知識労働者は、情報の処理方法に敏感にならねばなりません。
なぜなら、情報こそが、私たちの商売道具だからです。
個々の情報の本質を見極め、最も適した方法で蓄積していく。
蓄積形態は一度決定したら終わりではなく、常に見直しが必要でしょう。
情報処理を研ぎ澄ますことは、無駄を排除することです。
DRY原則の徹底はもちろん、作りすぎのムダも減らす必要があります。

==== 余白

改善によって生まれた時間に、何をしたらよいのでしょう。
私は、余白を保つべきと考えます。
ただし、より高い価値を生み出すための余白です。
テクノロジーの進化とともに情報が流れる速度は増しましたが、この効率化によって、私たちの仕事は楽になったでしょうか？
よい仕事には、余白が必要なのです――思考の熟成、あるいはさらなる学びのために。
手を抜くという言葉は、特に官公庁組織にとっては、受け入れがたい響きをもっています。
しかし間違えていけないのは、継続的に学ぶ努力をしない組織は、長期的には絶対に手を抜くことができません。
手を抜くことができるというのは、業務の頑健さと、それまでに費やした努力の証明であり、むしろ胸を張るべきことなのです。
勤勉さの定義の転換が必要なのかもしれません。

== おわりに

ここに寄稿する機会をいただき、1年間の活動をメタ的に振り返ることができました。
1年前まで、まさか自分が組織づくりについて考えるとは思ってもみませんでした。

プロジェクトへのDevOps導入を足がかりに、私がほんとうに実現したいビジョンは、「DevOps in Government」です。
ノンプログラマをはじめ、ゆくゆくは政府の中にまでDevOpsが浸透することを目指しています。
政府の思考の変化は、国の振る舞いを変えること。
開発現場では当たり前（?）のDevOpsも、場が変わるとインパクトが変わるのではないでしょうか。
「DevOps in Government」のビジョンは、つよい国を作るポテンシャルさえ持っていると確信しています。

あなたは、どんなビジョンを持っていますか？
なにか大きな目標に向かって、戦っているのでしょうか。
この記事は、そんなあなたの孤独感を拭い去りたいという気持ちで書きました。
私は、たとえビジョンが違えども、なにかに向かって奮闘する人はみな、大切な仲間だと思っています。
Twitterなどで私を見かけたら、ぜひお声掛けください。
ビジョンへ向けたそれぞれの取り組みを、励まし合いましょう。

最後にこの場を借りて、私の日々の学習や執筆活動を理解し、支えてくれる妻の若那に感謝します。
いつもありがとう。
